import bpy, bmesh
def union(shapes):
    print('union()')

    bpy.ops.object.select_all(0)
    shape = None
    for item in shapes:
        if shape is None:
            shape = item
            shape.select_set(1)
        else:#if False:
            print(item)
            bpy.ops.object.modifier_add(type='BOOLEAN')
            bpy.context.object.modifiers["Boolean"].object = item
            bpy.context.object.modifiers["Boolean"].solver = 'EXACT'
            bpy.context.object.modifiers["Boolean"].operation = 'UNION'
            bpy.ops.object.modifier_apply(modifier="Boolean")
            bpy.ops.object.select_all(0)
            item.select_set(1)
            bpy.ops.object.delete(use_global=False, confirm=False)
            shape.select_set(1)
    return shape

def difference(shape, shapes):
    print('union()')

    bpy.ops.object.select_all(0)
    shape = shape
    shape.select_set(1)
    for item in shapes:
        print(item)
        bpy.ops.object.modifier_add(type='BOOLEAN')
        bpy.context.object.modifiers["Boolean"].object = item
        bpy.context.object.modifiers["Boolean"].solver = 'EXACT'
        bpy.context.object.modifiers["Boolean"].operation = 'DIFFERENCE'
        bpy.ops.object.modifier_apply(modifier="Boolean")
        bpy.ops.object.select_all(0)
        item.select_set(1)
        bpy.ops.object.delete(use_global=False, confirm=False)
        shape.select_set(1)
    return shape

def intersect(shape1, shape2):
    print('union()')

    bpy.ops.object.select_all(0)
    shape1.select_set(1)
    bpy.ops.object.modifier_add(type='BOOLEAN')
    bpy.context.object.modifiers["Boolean"].object = shape2
    bpy.context.object.modifiers["Boolean"].solver = 'EXACT'
    bpy.context.object.modifiers["Boolean"].operation = 'INTERSECT'
    bpy.ops.object.modifier_apply(modifier="Boolean")
    bpy.ops.object.select_all(0)
    shape2.select_set(1)
    bpy.ops.object.delete(use_global=False, confirm=False)
    shape1.select_set(1)
    return shape1

def polyline(point_list):
    bpy.ops.object.select_all(0)
    bm = bmesh.new()
    for v in point_list:
        bm.verts.new((v[0], v[1], 0))
    bm.faces.new(bm.verts)

    bm.normal_update()

    me = bpy.data.meshes.new("Polygon")
    bm.to_mesh(me)

    ob = bpy.data.objects.new("Polygon", me)
    bpy.data.collections["Collection"].objects.link(ob)
    bpy.ops.object.select_all(0)
    return ob



verts = ((0, 3),(2.5, 0.5),(5, 1),(4.5, 3.5),(10.5, 2),(8, 10),(7, 4.5),(2, 6))


shapes = [bpy.data.objects['Icosphere.001'], bpy.data.objects['Icosphere.005']]
dshape = bpy.data.objects['Icosphere.001']
dshapes = [bpy.data.objects['Icosphere.005']]
ishape1 = bpy.data.objects['Icosphere.001']
ishape2 = bpy.data.objects['Icosphere.005']
#shape = union(shapes)
#shape = difference(dshape, dshapes)
#shape = intersect(ishape1, ishape2)
shape = polyline(verts)

print(shape)


